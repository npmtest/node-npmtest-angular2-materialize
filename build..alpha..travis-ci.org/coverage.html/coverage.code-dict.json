{"/home/travis/build/npmtest/node-npmtest-angular2-materialize/test.js":"/* istanbul instrument in package npmtest_angular2_materialize */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-materialize/lib.npmtest_angular2_materialize.js":"/* istanbul instrument in package npmtest_angular2_materialize */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_angular2_materialize = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_angular2_materialize = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-materialize/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-angular2-materialize && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_angular2_materialize */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_angular2_materialize\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_angular2_materialize.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_angular2_materialize.rollup.js'] =\n            local.assetsDict['/assets.npmtest_angular2_materialize.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_angular2_materialize.__dirname + '/lib.npmtest_angular2_materialize.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-materialize/node_modules/angular2-materialize/dist/index.js":"\"use strict\";\nvar materialize_directive_1 = require(\"./materialize-directive\");\nexports.MaterializeDirective = materialize_directive_1.MaterializeDirective;\nvar materialize_module_1 = require(\"./materialize-module\");\nexports.MaterializeModule = materialize_module_1.MaterializeModule;\nif (!(\"Materialize\" in window)) {\n    throw new Error(\"Couldn't find Materialize object on window. It is created by the materialize-css library. Please import materialize-css before importing angular2-materialize.\");\n}\nif (!(\"Waves\" in window)) {\n    throw new Error(\"Couldn't find Waves object on window. It is supposed to be created by the materialize-css library. Please import materialize-css before importing angular2-materialize.\");\n}\nWaves.displayEffect();\nfunction toast() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    Materialize.toast.apply(Materialize, args);\n}\nexports.toast = toast;\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-angular2-materialize/node_modules/angular2-materialize/dist/materialize-directive.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar custom_event_polyfill_1 = require(\"./custom-event-polyfill\");\nvar MaterializeDirective = (function () {\n    function MaterializeDirective(_el) {\n        this._el = _el;\n        this._params = null;\n        this._functionName = null;\n        this.previousValue = null;\n        this.previousDisabled = false;\n        this._waitFunction = {};\n        this.changeListenerShouldBeAdded = true;\n        this.init = new core_1.EventEmitter();\n        this.initialized = false;\n    }\n    Object.defineProperty(MaterializeDirective.prototype, \"materializeParams\", {\n        set: function (params) {\n            this._params = params;\n            this.performElementUpdates();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterializeDirective.prototype, \"materializeActions\", {\n        set: function (actions) {\n            var _this = this;\n            actions.subscribe(function (action) {\n                if (typeof action === \"string\") {\n                    _this.performLocalElementUpdates(action);\n                }\n                else {\n                    _this.performLocalElementUpdates(action.action, action.params);\n                }\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterializeDirective.prototype, \"materialize\", {\n        set: function (functionName) {\n            this._functionName = functionName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterializeDirective.prototype, \"materializeSelectOptions\", {\n        // this is here to trigger change detection for select elements\n        set: function (options) { },\n        enumerable: true,\n        configurable: true\n    });\n    MaterializeDirective.prototype.ngAfterViewInit = function () {\n        this.performElementUpdates();\n    };\n    MaterializeDirective.prototype.ngOnChanges = function (_unused) {\n        var _this = this;\n        if (this.isSelect()) {\n            setTimeout(function () { return _this.performLocalElementUpdates(); }, 10);\n        }\n    };\n    MaterializeDirective.prototype.ngOnDestroy = function () {\n        this.performElementRemotion();\n    };\n    MaterializeDirective.prototype.ngDoCheck = function () {\n        var nativeElement = this._el.nativeElement;\n        var jQueryElement = $(nativeElement);\n        if (this.isSelect()) {\n            var shouldUpdate = false;\n            if (nativeElement.disabled != this.previousDisabled) {\n                this.previousDisabled = nativeElement.disabled;\n                shouldUpdate = true;\n            }\n            if (!jQueryElement.attr(\"multiple\") && nativeElement.value != this.previousValue) {\n                // handle select changes of the model\n                this.previousValue = nativeElement.value;\n                shouldUpdate = true;\n            }\n            if (shouldUpdate) {\n                this.performLocalElementUpdates();\n            }\n        }\n        else if (this.isTextarea()) {\n            if (nativeElement.value != this.previousValue) {\n                this.previousValue = nativeElement.value;\n                this.performElementUpdates();\n            }\n        }\n        return false;\n    };\n    MaterializeDirective.prototype.performElementRemotion = function () {\n        if (this.isTooltip()) {\n            var nativeElement = this._el.nativeElement;\n            var jQueryElement = $(nativeElement);\n            var tooltipId = jQueryElement.attr('data-tooltip-id');\n            if (tooltipId) {\n                $('#' + tooltipId).remove();\n            }\n        }\n    };\n    MaterializeDirective.prototype.performElementUpdates = function () {\n        var _this = this;\n        // it should have been created by now, but confirm anyway\n        if (Materialize && Materialize.updateTextFields) {\n            Materialize.updateTextFields();\n        }\n        // handle select changes from the HTML\n        if (this.isSelect() && this.changeListenerShouldBeAdded) {\n            var nativeElement_1 = this._el.nativeElement;\n            var jQueryElement = $(nativeElement_1);\n            jQueryElement.on(\"change\", function (e) {\n                if (!e.originalEvent || !e.originalEvent.internalToMaterialize) {\n                    var event_1 = document.createEvent(\"CustomEvent\");\n                    //if (jQueryElement.attr(\"multiple\")) {\n                    //event.initCustomEvent(\"input\",false,false,undefined);\n                    //}\n                    //else {\n                    event_1.initCustomEvent(\"change\", false, false, undefined);\n                    //}\n                    event_1.internalToMaterialize = true;\n                    nativeElement_1.dispatchEvent(event_1);\n                }\n            });\n            this.changeListenerShouldBeAdded = false;\n        }\n        if (this.isAutocomplete()) {\n            var nativeElement_2 = this._el.nativeElement;\n            var jQueryElement = $(nativeElement_2);\n            jQueryElement.on(\"change\", function (e) { return nativeElement_2.dispatchEvent(custom_event_polyfill_1.CustomEvent(\"input\")); });\n        }\n        if (this.isDatePicker()) {\n            var nativeElement_3 = this._el.nativeElement;\n            var jQueryElement_1 = $(nativeElement_3);\n            var enablebtns = this.enableDPButtons;\n            jQueryElement_1.on(\"change\", function (e) { return nativeElement_3.dispatchEvent(custom_event_polyfill_1.CustomEvent(\"input\")); });\n            var datePicker = jQueryElement_1[this._functionName].apply(jQueryElement_1, this._params);\n            var picker_1 = datePicker.pickadate('picker');\n            jQueryElement_1.mousedown(function () {\n                if (!jQueryElement_1.val()) {\n                    return;\n                }\n                return picker_1.set.apply(picker_1, ['select', jQueryElement_1.val()].concat(_this._params));\n            });\n        }\n        if (this.isTimePicker()) {\n            var nativeElement_4 = this._el.nativeElement;\n            var jQueryElement = $(nativeElement_4);\n            jQueryElement.on(\"change\", function (e) { return nativeElement_4.dispatchEvent(custom_event_polyfill_1.CustomEvent(\"input\")); });\n        }\n        if (this.isChips()) {\n            var nativeElement_5 = this._el.nativeElement;\n            var jQueryElement = $(nativeElement_5);\n            jQueryElement.on(\"chip.add\", function (e, chip) { return nativeElement_5.dispatchEvent(custom_event_polyfill_1.CustomEvent(\"chip.add\", chip)); });\n            jQueryElement.on(\"chip.delete\", function (e, chip) { return nativeElement_5.dispatchEvent(custom_event_polyfill_1.CustomEvent(\"chip.delete\", chip)); });\n            jQueryElement.on(\"chip.select\", function (e, chip) { return nativeElement_5.dispatchEvent(custom_event_polyfill_1.CustomEvent(\"chip.select\", chip)); });\n        }\n        if (this.isTextarea()) {\n            this._el.nativeElement.dispatchEvent(custom_event_polyfill_1.CustomEvent(\"autoresize\", { bubbles: true, cancelable: false, detail: undefined }));\n        }\n        this.performLocalElementUpdates();\n    };\n    MaterializeDirective.prototype.performLocalElementUpdates = function (functionName, params) {\n        var _this = this;\n        if (functionName === void 0) { functionName = this._functionName; }\n        if (params === void 0) { params = this._params; }\n        if (this._waitFunction[functionName]) {\n            return;\n        }\n        this._waitFunction[functionName] = true;\n        $(document).ready(function () {\n            _this._waitFunction[functionName] = false;\n            if (functionName) {\n                var jQueryElement = $(_this._el.nativeElement);\n                if (jQueryElement[functionName]) {\n                    if (params) {\n                        if (params instanceof Array) {\n                            jQueryElement[functionName].apply(jQueryElement, params);\n                        }\n                        else {\n                            throw new Error(\"Params has to be an array.\");\n                        }\n                    }\n                    else {\n                        jQueryElement[functionName]();\n                    }\n                }\n                else {\n                    // fallback to running this function on the global Materialize object\n                    if (Materialize[functionName]) {\n                        if (params) {\n                            if (params instanceof Array) {\n                                Materialize[functionName].apply(Materialize, params);\n                            }\n                            else {\n                                throw new Error(\"Params has to be an array.\");\n                            }\n                        }\n                        else {\n                            Materialize[functionName]();\n                        }\n                    }\n                    else {\n                        throw new Error(\"Couldn't find materialize function ''\" + functionName + \"' on element or the global Materialize object.\");\n                    }\n                }\n                if (!_this.initialized) {\n                    _this.initialized = true;\n                    _this.init.emit();\n                }\n            }\n        });\n    };\n    MaterializeDirective.prototype.isTooltip = function () {\n        return (this._functionName && this._functionName === \"tooltip\");\n    };\n    MaterializeDirective.prototype.isSelect = function () {\n        return (this._functionName && this._functionName === \"material_select\");\n    };\n    MaterializeDirective.prototype.isDatePicker = function () {\n        return (this._functionName && this._functionName === \"pickadate\");\n    };\n    MaterializeDirective.prototype.isTimePicker = function () {\n        return (this._functionName && this._functionName === \"pickatime\");\n    };\n    MaterializeDirective.prototype.isChips = function () {\n        return (this._functionName && this._functionName === \"material_chip\");\n    };\n    MaterializeDirective.prototype.isAutocomplete = function () {\n        return (this._functionName && this._functionName === \"autocomplete\");\n    };\n    MaterializeDirective.prototype.isTextarea = function () {\n        return this._el.nativeElement.nodeName == \"TEXTAREA\";\n    };\n    MaterializeDirective.prototype.enableDPButtons = function () {\n        $('.picker__clear').removeAttr(\"disabled\");\n        $('.picker__today').removeAttr(\"disabled\");\n        $('.picker__close').removeAttr(\"disabled\");\n        $('.picker__select--year').removeAttr(\"disabled\");\n        $('.picker__select--month').removeAttr(\"disabled\");\n    };\n    return MaterializeDirective;\n}());\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], MaterializeDirective.prototype, \"init\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], MaterializeDirective.prototype, \"materializeParams\", null);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", core_1.EventEmitter),\n    __metadata(\"design:paramtypes\", [core_1.EventEmitter])\n], MaterializeDirective.prototype, \"materializeActions\", null);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], MaterializeDirective.prototype, \"materialize\", null);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], MaterializeDirective.prototype, \"materializeSelectOptions\", null);\nMaterializeDirective = __decorate([\n    core_1.Directive({\n        selector: '[materialize]'\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], MaterializeDirective);\nexports.MaterializeDirective = MaterializeDirective;\n//# sourceMappingURL=materialize-directive.js.map","/home/travis/build/npmtest/node-npmtest-angular2-materialize/node_modules/angular2-materialize/config.js":"System.config({\n  baseURL: \"/\",\n  defaultJSExtensions: true,\n  transpiler: \"typescript\",\n  typescriptOptions: {\n    \"module\": \"commonjs\",\n    \"emitDecoratorMetadata\": true\n  },\n  paths: {\n    \"npm:*\": \"jspm_packages/npm/*\",\n    \"github:*\": \"jspm_packages/github/*\"\n  },\n\n  packages: {\n    \"app\": {\n      \"main\": \"main\",\n      \"defaultExtension\": \"ts\"\n    },\n    \"src\": {\n      \"defaultExtension\": \"ts\"\n    },\n    \"materialize-css\": {\n      \"main\": \"dist/js/materialize\"\n    }\n  },\n\n  map: {\n    \"@angular/common\": \"npm:@angular/common@2.1.2\",\n    \"@angular/compiler\": \"npm:@angular/compiler@2.1.2\",\n    \"@angular/core\": \"npm:@angular/core@2.1.2\",\n    \"@angular/forms\": \"npm:@angular/forms@2.1.2\",\n    \"@angular/platform-browser\": \"npm:@angular/platform-browser@2.1.2\",\n    \"@angular/platform-browser-dynamic\": \"npm:@angular/platform-browser-dynamic@2.1.2\",\n    \"@angular/router\": \"npm:@angular/router@3.1.2\",\n    \"clean-css\": \"npm:clean-css@3.4.20\",\n    \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n    \"css\": \"github:systemjs/plugin-css@0.1.32\",\n    \"es6-shim\": \"github:es-shims/es6-shim@0.35.1\",\n    \"jquery\": \"npm:jquery@2.2.4\",\n    \"materialize-css\": \"npm:materialize-css@0.97.8\",\n    \"reflect-metadata\": \"npm:reflect-metadata@0.1.8\",\n    \"rxjs\": \"npm:rxjs@5.0.0-beta.12\",\n    \"typescript\": \"npm:typescript@2.0.6\",\n    \"zone.js\": \"npm:zone.js@0.6.26\",\n    \"github:jspm/nodelibs-assert@0.1.0\": {\n      \"assert\": \"npm:assert@1.4.1\"\n    },\n    \"github:jspm/nodelibs-buffer@0.1.0\": {\n      \"buffer\": \"npm:buffer@3.6.0\"\n    },\n    \"github:jspm/nodelibs-constants@0.1.0\": {\n      \"constants-browserify\": \"npm:constants-browserify@0.0.1\"\n    },\n    \"github:jspm/nodelibs-crypto@0.1.0\": {\n      \"crypto-browserify\": \"npm:crypto-browserify@3.11.0\"\n    },\n    \"github:jspm/nodelibs-events@0.1.1\": {\n      \"events\": \"npm:events@1.0.2\"\n    },\n    \"github:jspm/nodelibs-http@1.7.1\": {\n      \"Base64\": \"npm:Base64@0.2.1\",\n      \"events\": \"github:jspm/nodelibs-events@0.1.1\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"stream\": \"github:jspm/nodelibs-stream@0.1.0\",\n      \"url\": \"github:jspm/nodelibs-url@0.1.0\",\n      \"util\": \"github:jspm/nodelibs-util@0.1.0\"\n    },\n    \"github:jspm/nodelibs-https@0.1.0\": {\n      \"https-browserify\": \"npm:https-browserify@0.0.0\"\n    },\n    \"github:jspm/nodelibs-net@0.1.2\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"http\": \"github:jspm/nodelibs-http@1.7.1\",\n      \"net\": \"github:jspm/nodelibs-net@0.1.2\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"stream\": \"github:jspm/nodelibs-stream@0.1.0\",\n      \"timers\": \"github:jspm/nodelibs-timers@0.1.0\",\n      \"util\": \"github:jspm/nodelibs-util@0.1.0\"\n    },\n    \"github:jspm/nodelibs-os@0.1.0\": {\n      \"os-browserify\": \"npm:os-browserify@0.1.2\"\n    },\n    \"github:jspm/nodelibs-path@0.1.0\": {\n      \"path-browserify\": \"npm:path-browserify@0.0.0\"\n    },\n    \"github:jspm/nodelibs-process@0.1.2\": {\n      \"process\": \"npm:process@0.11.9\"\n    },\n    \"github:jspm/nodelibs-querystring@0.1.0\": {\n      \"querystring\": \"npm:querystring@0.2.0\"\n    },\n    \"github:jspm/nodelibs-stream@0.1.0\": {\n      \"stream-browserify\": \"npm:stream-browserify@1.0.0\"\n    },\n    \"github:jspm/nodelibs-string_decoder@0.1.0\": {\n      \"string_decoder\": \"npm:string_decoder@0.10.31\"\n    },\n    \"github:jspm/nodelibs-timers@0.1.0\": {\n      \"timers-browserify\": \"npm:timers-browserify@1.4.2\"\n    },\n    \"github:jspm/nodelibs-url@0.1.0\": {\n      \"url\": \"npm:url@0.10.3\"\n    },\n    \"github:jspm/nodelibs-util@0.1.0\": {\n      \"util\": \"npm:util@0.10.3\"\n    },\n    \"github:jspm/nodelibs-vm@0.1.0\": {\n      \"vm-browserify\": \"npm:vm-browserify@0.0.4\"\n    },\n    \"npm:@angular/common@2.1.2\": {\n      \"@angular/core\": \"npm:@angular/core@2.1.2\"\n    },\n    \"npm:@angular/compiler@2.1.2\": {\n      \"@angular/core\": \"npm:@angular/core@2.1.2\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:@angular/core@2.1.2\": {\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"rxjs\": \"npm:rxjs@5.0.0-beta.12\",\n      \"zone.js\": \"npm:zone.js@0.6.26\"\n    },\n    \"npm:@angular/forms@2.1.2\": {\n      \"@angular/common\": \"npm:@angular/common@2.1.2\",\n      \"@angular/core\": \"npm:@angular/core@2.1.2\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:@angular/platform-browser-dynamic@2.1.2\": {\n      \"@angular/common\": \"npm:@angular/common@2.1.2\",\n      \"@angular/compiler\": \"npm:@angular/compiler@2.1.2\",\n      \"@angular/core\": \"npm:@angular/core@2.1.2\",\n      \"@angular/platform-browser\": \"npm:@angular/platform-browser@2.1.2\"\n    },\n    \"npm:@angular/platform-browser@2.1.2\": {\n      \"@angular/common\": \"npm:@angular/common@2.1.2\",\n      \"@angular/core\": \"npm:@angular/core@2.1.2\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:@angular/router@3.1.2\": {\n      \"@angular/common\": \"npm:@angular/common@2.1.2\",\n      \"@angular/core\": \"npm:@angular/core@2.1.2\",\n      \"@angular/platform-browser\": \"npm:@angular/platform-browser@2.1.2\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"rxjs\": \"npm:rxjs@5.0.0-beta.12\"\n    },\n    \"npm:amdefine@1.0.0\": {\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"module\": \"github:jspm/nodelibs-module@0.1.0\",\n      \"path\": \"github:jspm/nodelibs-path@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:asn1.js@4.8.1\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"minimalistic-assert\": \"npm:minimalistic-assert@1.0.0\",\n      \"vm\": \"github:jspm/nodelibs-vm@0.1.0\"\n    },\n    \"npm:assert@1.4.1\": {\n      \"assert\": \"github:jspm/nodelibs-assert@0.1.0\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"util\": \"npm:util@0.10.3\"\n    },\n    \"npm:bn.js@4.11.6\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\"\n    },\n    \"npm:browserify-aes@1.0.6\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"buffer-xor\": \"npm:buffer-xor@1.0.3\",\n      \"cipher-base\": \"npm:cipher-base@1.0.3\",\n      \"create-hash\": \"npm:create-hash@1.1.2\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"evp_bytestokey\": \"npm:evp_bytestokey@1.0.0\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"systemjs-json\": \"github:systemjs/plugin-json@0.1.2\"\n    },\n    \"npm:browserify-cipher@1.0.0\": {\n      \"browserify-aes\": \"npm:browserify-aes@1.0.6\",\n      \"browserify-des\": \"npm:browserify-des@1.0.0\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"evp_bytestokey\": \"npm:evp_bytestokey@1.0.0\"\n    },\n    \"npm:browserify-des@1.0.0\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"cipher-base\": \"npm:cipher-base@1.0.3\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"des.js\": \"npm:des.js@1.0.0\",\n      \"inherits\": \"npm:inherits@2.0.1\"\n    },\n    \"npm:browserify-rsa@4.0.1\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"constants\": \"github:jspm/nodelibs-constants@0.1.0\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"randombytes\": \"npm:randombytes@2.0.3\"\n    },\n    \"npm:browserify-sign@4.0.0\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"browserify-rsa\": \"npm:browserify-rsa@4.0.1\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"create-hash\": \"npm:create-hash@1.1.2\",\n      \"create-hmac\": \"npm:create-hmac@1.1.4\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"elliptic\": \"npm:elliptic@6.3.2\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"parse-asn1\": \"npm:parse-asn1@5.0.0\",\n      \"stream\": \"github:jspm/nodelibs-stream@0.1.0\"\n    },\n    \"npm:buffer-xor@1.0.3\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"systemjs-json\": \"github:systemjs/plugin-json@0.1.2\"\n    },\n    \"npm:buffer@3.6.0\": {\n      \"base64-js\": \"npm:base64-js@0.0.8\",\n      \"child_process\": \"github:jspm/nodelibs-child_process@0.1.0\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"ieee754\": \"npm:ieee754@1.1.8\",\n      \"isarray\": \"npm:isarray@1.0.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:cipher-base@1.0.3\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"stream\": \"github:jspm/nodelibs-stream@0.1.0\",\n      \"string_decoder\": \"github:jspm/nodelibs-string_decoder@0.1.0\"\n    },\n    \"npm:clean-css@3.4.20\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"commander\": \"npm:commander@2.8.1\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"http\": \"github:jspm/nodelibs-http@1.7.1\",\n      \"https\": \"github:jspm/nodelibs-https@0.1.0\",\n      \"os\": \"github:jspm/nodelibs-os@0.1.0\",\n      \"path\": \"github:jspm/nodelibs-path@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"source-map\": \"npm:source-map@0.4.4\",\n      \"url\": \"github:jspm/nodelibs-url@0.1.0\",\n      \"util\": \"github:jspm/nodelibs-util@0.1.0\"\n    },\n    \"npm:commander@2.8.1\": {\n      \"child_process\": \"github:jspm/nodelibs-child_process@0.1.0\",\n      \"events\": \"github:jspm/nodelibs-events@0.1.1\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"graceful-readlink\": \"npm:graceful-readlink@1.0.1\",\n      \"path\": \"github:jspm/nodelibs-path@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:constants-browserify@0.0.1\": {\n      \"systemjs-json\": \"github:systemjs/plugin-json@0.1.2\"\n    },\n    \"npm:core-util-is@1.0.2\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\"\n    },\n    \"npm:create-ecdh@4.0.0\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"elliptic\": \"npm:elliptic@6.3.2\"\n    },\n    \"npm:create-hash@1.1.2\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"cipher-base\": \"npm:cipher-base@1.0.3\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"ripemd160\": \"npm:ripemd160@1.0.1\",\n      \"sha.js\": \"npm:sha.js@2.4.5\"\n    },\n    \"npm:create-hmac@1.1.4\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"create-hash\": \"npm:create-hash@1.1.2\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"stream\": \"github:jspm/nodelibs-stream@0.1.0\"\n    },\n    \"npm:crypto-browserify@3.11.0\": {\n      \"browserify-cipher\": \"npm:browserify-cipher@1.0.0\",\n      \"browserify-sign\": \"npm:browserify-sign@4.0.0\",\n      \"create-ecdh\": \"npm:create-ecdh@4.0.0\",\n      \"create-hash\": \"npm:create-hash@1.1.2\",\n      \"create-hmac\": \"npm:create-hmac@1.1.4\",\n      \"diffie-hellman\": \"npm:diffie-hellman@5.0.2\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"pbkdf2\": \"npm:pbkdf2@3.0.9\",\n      \"public-encrypt\": \"npm:public-encrypt@4.0.0\",\n      \"randombytes\": \"npm:randombytes@2.0.3\"\n    },\n    \"npm:des.js@1.0.0\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"minimalistic-assert\": \"npm:minimalistic-assert@1.0.0\"\n    },\n    \"npm:diffie-hellman@5.0.2\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"miller-rabin\": \"npm:miller-rabin@4.0.0\",\n      \"randombytes\": \"npm:randombytes@2.0.3\",\n      \"systemjs-json\": \"github:systemjs/plugin-json@0.1.2\"\n    },\n    \"npm:elliptic@6.3.2\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"brorand\": \"npm:brorand@1.0.6\",\n      \"hash.js\": \"npm:hash.js@1.0.3\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"systemjs-json\": \"github:systemjs/plugin-json@0.1.2\"\n    },\n    \"npm:evp_bytestokey@1.0.0\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"create-hash\": \"npm:create-hash@1.1.2\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\"\n    },\n    \"npm:graceful-readlink@1.0.1\": {\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\"\n    },\n    \"npm:hash.js@1.0.3\": {\n      \"inherits\": \"npm:inherits@2.0.1\"\n    },\n    \"npm:https-browserify@0.0.0\": {\n      \"http\": \"github:jspm/nodelibs-http@1.7.1\"\n    },\n    \"npm:inherits@2.0.1\": {\n      \"util\": \"github:jspm/nodelibs-util@0.1.0\"\n    },\n    \"npm:isarray@1.0.0\": {\n      \"systemjs-json\": \"github:systemjs/plugin-json@0.1.2\"\n    },\n    \"npm:materialize-css@0.97.8\": {\n      \"css\": \"github:systemjs/plugin-css@0.1.32\",\n      \"jquery\": \"github:components/jquery@3.1.1\"\n    },\n    \"npm:miller-rabin@4.0.0\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"brorand\": \"npm:brorand@1.0.6\"\n    },\n    \"npm:os-browserify@0.1.2\": {\n      \"os\": \"github:jspm/nodelibs-os@0.1.0\"\n    },\n    \"npm:parse-asn1@5.0.0\": {\n      \"asn1.js\": \"npm:asn1.js@4.8.1\",\n      \"browserify-aes\": \"npm:browserify-aes@1.0.6\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"create-hash\": \"npm:create-hash@1.1.2\",\n      \"evp_bytestokey\": \"npm:evp_bytestokey@1.0.0\",\n      \"pbkdf2\": \"npm:pbkdf2@3.0.9\",\n      \"systemjs-json\": \"github:systemjs/plugin-json@0.1.2\"\n    },\n    \"npm:path-browserify@0.0.0\": {\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:pbkdf2@3.0.9\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"create-hmac\": \"npm:create-hmac@1.1.4\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:process@0.11.9\": {\n      \"assert\": \"github:jspm/nodelibs-assert@0.1.0\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"vm\": \"github:jspm/nodelibs-vm@0.1.0\"\n    },\n    \"npm:public-encrypt@4.0.0\": {\n      \"bn.js\": \"npm:bn.js@4.11.6\",\n      \"browserify-rsa\": \"npm:browserify-rsa@4.0.1\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"create-hash\": \"npm:create-hash@1.1.2\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"parse-asn1\": \"npm:parse-asn1@5.0.0\",\n      \"randombytes\": \"npm:randombytes@2.0.3\"\n    },\n    \"npm:punycode@1.3.2\": {\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:randombytes@2.0.3\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:readable-stream@1.1.14\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"core-util-is\": \"npm:core-util-is@1.0.2\",\n      \"events\": \"github:jspm/nodelibs-events@0.1.1\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"isarray\": \"npm:isarray@0.0.1\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"stream-browserify\": \"npm:stream-browserify@1.0.0\",\n      \"string_decoder\": \"npm:string_decoder@0.10.31\"\n    },\n    \"npm:ripemd160@1.0.1\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:rxjs@5.0.0-beta.12\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"symbol-observable\": \"npm:symbol-observable@1.0.4\"\n    },\n    \"npm:sha.js@2.4.5\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:source-map-support@0.4.6\": {\n      \"assert\": \"github:jspm/nodelibs-assert@0.1.0\",\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\",\n      \"child_process\": \"github:jspm/nodelibs-child_process@0.1.0\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"module\": \"github:jspm/nodelibs-module@0.1.0\",\n      \"path\": \"github:jspm/nodelibs-path@0.1.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"querystring\": \"github:jspm/nodelibs-querystring@0.1.0\",\n      \"source-map\": \"npm:source-map@0.5.6\"\n    },\n    \"npm:source-map@0.4.4\": {\n      \"amdefine\": \"npm:amdefine@1.0.0\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:source-map@0.5.6\": {\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:stream-browserify@1.0.0\": {\n      \"events\": \"github:jspm/nodelibs-events@0.1.1\",\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"readable-stream\": \"npm:readable-stream@1.1.14\"\n    },\n    \"npm:string_decoder@0.10.31\": {\n      \"buffer\": \"github:jspm/nodelibs-buffer@0.1.0\"\n    },\n    \"npm:timers-browserify@1.4.2\": {\n      \"process\": \"npm:process@0.11.9\"\n    },\n    \"npm:typescript@2.0.6\": {\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"http\": \"github:jspm/nodelibs-http@1.7.1\",\n      \"net\": \"github:jspm/nodelibs-net@0.1.2\",\n      \"os\": \"github:jspm/nodelibs-os@0.1.0\",\n      \"source-map-support\": \"npm:source-map-support@0.4.6\"\n    },\n    \"npm:url@0.10.3\": {\n      \"assert\": \"github:jspm/nodelibs-assert@0.1.0\",\n      \"punycode\": \"npm:punycode@1.3.2\",\n      \"querystring\": \"npm:querystring@0.2.0\",\n      \"util\": \"github:jspm/nodelibs-util@0.1.0\"\n    },\n    \"npm:util@0.10.3\": {\n      \"inherits\": \"npm:inherits@2.0.1\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\"\n    },\n    \"npm:vm-browserify@0.0.4\": {\n      \"indexof\": \"npm:indexof@0.0.1\"\n    },\n    \"npm:zone.js@0.6.26\": {\n      \"crypto\": \"github:jspm/nodelibs-crypto@0.1.0\",\n      \"events\": \"github:jspm/nodelibs-events@0.1.1\",\n      \"fs\": \"github:jspm/nodelibs-fs@0.1.2\",\n      \"process\": \"github:jspm/nodelibs-process@0.1.2\",\n      \"timers\": \"github:jspm/nodelibs-timers@0.1.0\"\n    }\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-angular2-materialize/node_modules/angular2-materialize/gulpfile.js":"var gulp = require('gulp');\nvar rimraf = require('gulp-rimraf');\nvar runSequence = require('run-sequence');\nvar tsc = require('gulp-typescript');\nvar exec = require('child_process').exec;\n\nvar paths = {\n    dist: './dist',\n    sourceFiles: ['./src/*'],\n    toDelete: ['./dist/index.ts','./dist/custom-event-polyfill.ts','./dist/materialize-directive.ts','./dist/materialize-module.ts','./dist/src','./dist/app','./dist/test'],\n    distSourcesFiles: ['./dist/src/*']\n};\n\ngulp.task('clean', function () {\n    return gulp.src(paths.dist, {read: false}).pipe(rimraf({force: true}));\n});\n\ngulp.task('copySources', function(){\n    return gulp.src(paths.sourceFiles).pipe(gulp.dest(paths.dist));\n});\n\ngulp.task('tsc', function () {\n    var tsProject = tsc.createProject('tsconfig.json', {outDir:\"dist\",declaration:true});\n    var tsResult = tsProject.src().pipe(tsc(tsProject));\n    tsResult.pipe(gulp.dest(paths.dist));\n    return tsResult.dts.pipe(gulp.dest(paths.dist));\n});\n\ngulp.task('ngc', function (cb) {\n  exec('ngc -p tsconfig-ngc.json', function(err, stdout, stderr) {\n    console.log(stdout);\n    console.log(stderr);\n    cb(err);\n  });\n});\n\ngulp.task('copy', function(){\n    return gulp.src(paths.distSourcesFiles).pipe(gulp.dest(paths.dist));\n});\n\ngulp.task('cleanup', function () {\n    return gulp.src(paths.toDelete, {read: false}).pipe(rimraf({force: true}));\n});\n\n// entry point - run tasks in a sequence\ngulp.task('default', function (callback) {\n    runSequence(\n        'clean',\n        'copySources',\n        'ngc',\n        'copy',\n        'cleanup',\n        function (error) {\n            if (error) {\n                console.log(error.message);\n            } else {\n                console.log('FINISHED SUCCESSFULLY');\n            }\n            callback(error);\n        });\n});\n","/home/travis/build/npmtest/node-npmtest-angular2-materialize/node_modules/angular2-materialize/webpack.config.js":"var webpack = require(\"webpack\");\nmodule.exports = {\n    entry: \"./app/main.ts\",\n    output: {\n        path: __dirname + \"/webpack-dist\",\n        filename: \"bundle.js\"\n    },\n    devtool: 'source-map',\n    resolve: {\n        alias: {\n          \"materialize-css\": 'materialize-css/dist/css/materialize.css'\n        },\n        extensions: ['', '.webpack.js', '.web.js', '.ts', '.js', '.css']\n    },\n    externals: {\n        jquery: 'jQuery'\n  },\n    module: {\n        loaders: [\n            {\n              test: /materialize-css\\/dist\\/js\\/materialize\\.js/,\n              loader: 'imports?materialize-css'\n            },\n            { test: /\\.ts$/, loader: 'ts-loader' },\n            { test: /\\.css$/, loader: 'style-loader!css-loader' },\n            { test: /.(png|woff(2)?|eot|ttf|svg)(\\?[a-z0-9=\\.]+)?$/, loader: 'url-loader?limit=100000' }\n        ]\n    },\n    noParse: [ /.+zone\\.js\\/dist\\/.+/, /.+angular2\\/bundles\\/.+/ ],\n    plugins: [\n        new webpack.ProvidePlugin({\n            $: \"jquery\",\n            jQuery: \"jquery\",\n            \"window.jQuery\": \"jquery\",\n            Hammer: \"hammerjs/hammer\"\n        })\n    ]\n};\n"}